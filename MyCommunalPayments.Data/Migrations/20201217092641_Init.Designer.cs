// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCommunalPayments.Data.Context;

namespace MyCommunalPayments.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201217092641_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Invoice", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPeriod")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceSum")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Pay")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdInvoice");

                    b.HasIndex("IdPeriod");

                    b.HasIndex("IdProvider");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.InvoiceServices", b =>
                {
                    b.Property<int>("IdInvoiceServices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("int");

                    b.Property<int>("IdService")
                        .HasColumnType("int");

                    b.HasKey("IdInvoiceServices");

                    b.HasIndex("IdInvoice");

                    b.HasIndex("IdService");

                    b.ToTable("InvoceServices");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("OrderScreen")
                        .HasColumnType("longblob");

                    b.HasKey("IdOrder");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DatePayment")
                        .HasColumnType("longtext");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("PaymentSum")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdInvoice");

                    b.HasIndex("IdOrder");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Period", b =>
                {
                    b.Property<int>("IdKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("longtext");

                    b.HasKey("IdKey");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Provider", b =>
                {
                    b.Property<int>("IdProvider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameProvider")
                        .HasColumnType("longtext");

                    b.Property<string>("WebSite")
                        .HasColumnType("longtext");

                    b.HasKey("IdProvider");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.ProvidersServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProvider");

                    b.HasIndex("IdService");

                    b.ToTable("ProvidersServices");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsCounter")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameService")
                        .HasColumnType("longtext");

                    b.HasKey("IdService");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.ServiceCounter", b =>
                {
                    b.Property<int>("IdCounter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DateCount")
                        .HasColumnType("longtext");

                    b.Property<int>("IdService")
                        .HasColumnType("int");

                    b.Property<int>("ValueCounter")
                        .HasColumnType("int");

                    b.HasKey("IdCounter");

                    b.HasIndex("IdService");

                    b.ToTable("ServicesCounters");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Transactions", b =>
                {
                    b.Property<int>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Invoice")
                        .HasColumnType("int");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<string>("Period")
                        .HasColumnType("longtext");

                    b.HasKey("IdTransaction");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Invoice", b =>
                {
                    b.HasOne("MyCommunalPayments.Models.Models.Period", "Period")
                        .WithMany()
                        .HasForeignKey("IdPeriod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCommunalPayments.Models.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("IdProvider")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Period");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.InvoiceServices", b =>
                {
                    b.HasOne("MyCommunalPayments.Models.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("IdInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCommunalPayments.Models.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.Payment", b =>
                {
                    b.HasOne("MyCommunalPayments.Models.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("IdInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCommunalPayments.Models.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.ProvidersServices", b =>
                {
                    b.HasOne("MyCommunalPayments.Models.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("IdProvider")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyCommunalPayments.Models.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("MyCommunalPayments.Models.Models.ServiceCounter", b =>
                {
                    b.HasOne("MyCommunalPayments.Models.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
