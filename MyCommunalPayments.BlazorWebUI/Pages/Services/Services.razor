@page "/Services/Services"
@inject MyCommunalPayments.Data.Services.Repositories.Base.IRepository<Service> repository

<!-- Форма -->
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <h2 class="text-center">Услуги ЖКХ </h2>

            <!--Уведомление  результате операции-->
            @if (!string.IsNullOrWhiteSpace(Message))
            {
                <div class="alert alert-success text-center p-3 mb-2">
                    @Message
                </div>
            }

            <!--Добавление новой услуги-->
            <div class="row mb-3">
                <div class="col">
                    <button class="btn btn-success" @onclick="() => OpenModal()">Добавить</button>
                </div>
            </div>
            <!--  Отображение таблицы с услугами  -->
            <table class="table table-sm table-bordered table-hover ">
                <!--Заголовок таблицы-->
                <thead class="table-dark">
                    <tr>
                        <th scope="col" class="w-75">Наименование услуги</th>
                        <th scope="col" class="w-auto"></th>
                    </tr>
                </thead>
                <!--Тело таблицы-->
                @foreach (var item in services)
                {
                    <tbody>
                        <tr>
                            <!--Наименование услуги-->
                            <td>
                                <div>
                                    @item.NameService
                                </div>

                            </td>
                            <!--Блок кнопок-->
                            <td>
                                <div class="text-center">
                                    <button class="btn btn-sm btn-info" @onclick="(() => Edit(item))">Изменить</button>
                                    <button class="btn btn-sm btn-danger" @onclick="(() => Remove(item))">Удалить</button>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                }
            </table>

        </div>
    </div>
</div>

<!-- Modal -->
<Modal @ref="modal" CloseWindow="CloseModal">
    <Title>Добавление новой услуги ЖКХ</Title>
    <Body>
        <div class="col mb-2">
            <input class="form-control" placeholder="Наименование услуги" @bind-value="serviceName" />
        </div>
        <!--Чек-бокс-->
        <div class="col">
            @if (count)//Проверяем, был ли флажек в БД
            {
                //Если был ставим атрибут checked
                <input type="checkbox" checked="checked" @bind-value="count" class="align-content-center" />
            }
            else
            {
                <input type="checkbox" @bind-value="count" class="align-content-center" />
            }
            <label class="form-check-label">Услуга подразумевает наличие счетчика </label>
        </div>
    </Body>
    <Footer>
        <button type="button" class="btn btn-sm btn-primary" @onclick="Add">Сохранить</button>
    </Footer>
</Modal>


@code
{
    #region Поля, Инициализация формы, Модальное окно

    private Service service;
    private IEnumerable<Service> services;
    private string serviceName;
    private bool count;

    //Модальное окно
    private Modal modal { get; set; }

    private void CloseModal()
    {
        count = default;
        serviceName = default;
        modal.Close();
    }

    private void OpenModal()
    {
        Message = default;
        modal.Open();
    }

    //Уведомление об операции
    private string Message { get; set; }


    protected override void OnInitialized()
    {
        //services = new List<Service>();
        services = repository.GetAll().ToList();
        NavMenu.SetSubMenu(true);
    }

    #endregion

    #region Обработка нажатия кнопок

    /// <summary>
    /// Добавить дело
    /// </summary>
    private void Add()
    {
        string message = default;
        if (!string.IsNullOrWhiteSpace(serviceName))
        {

            if (service == null)
            {
                service = new Service()
                {
                    NameService = serviceName,
                    IsCounter = count
                };

                repository.Add(service);

                message = $"Услуга добавлена!";


            }
            else
            {
                service.NameService = serviceName;
                service.IsCounter = count;
                repository.Edit(service);
                message = $"Услуга обновлена!";
            }
        }

        Message = message;
        CloseModal();
    }

    /// <summary>
    /// Изменить запись
    /// </summary>
    private void Edit(Service item)
    {
        service = item;
        OpenModal();
        serviceName = service.NameService;
        count = service.IsCounter;

    }

    /// <summary>
    /// Удалить запись
    /// </summary>
    private void Remove(Service item)
    {
        repository.Remove(item);
    }

    #endregion

}

